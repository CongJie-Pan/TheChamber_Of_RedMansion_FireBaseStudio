{
  "permissions": {
    "allow": [
      "Bash(python -m pytest tests/test_models.py tests/test_config.py tests/test_validation.py -v)",
      "Bash(python:*)",
      "Bash(pip install:*)",
      "Bash(timeout:*)",
      "Bash(streamlit run:*)",
      "Bash(dir datasets)",
      "Bash(dir:*)",
      "Bash(mkdir:*)",
      "WebSearch",
      "Bash(tree:*)",
      "Bash(claude mcp)",
      "Bash(claude mcp:*)",
      "Bash(uvx:*)",
      "mcp__serena",
      "Bash(PYTHONPATH=. python -c \"\nfrom ui.components import _display_judgment_explanations_content\nprint(''✅ UI components import successful'')\n\")",
      "Bash(PYTHONPATH=. python -c \"\nfrom streamlit_pipeline.ui.components import _display_judgment_explanations_content\nprint(''UI components import successful'')\n\")",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(env)",
      "Bash(claude help)",
      "Bash(git rm:*)",
      "Read(//d/AboutCoding/AI_Research/GraphJudge_TextToKG_CLI/streamlit_pipeline/**)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run lint)",
      "Bash(npm run build:*)",
      "Bash(npm test:*)",
      "Bash(npm run dev:*)",
      "Bash(rd:*)",
      "Bash(npm install)",
      "Bash(npm install:*)",
      "Bash(npm cache clean:*)",
      "Bash(findstr:*)",
      "Read(//d/AboutUniversity/114 NSTC_and_SeniorProject/2025-IM-senior-project/.git/**)",
      "Bash(npm config:*)",
      "Bash(reg query:*)",
      "Bash(npm outdated:*)",
      "Bash(powershell:*)",
      "Bash(git config:*)",
      "Bash(if [ -d \"node_modules\" ])",
      "Bash(then echo \"node_modules exists\")",
      "Bash(else echo \"node_modules not found\")",
      "Bash(fi)",
      "Bash(if [ -f \"package-lock.json\" ])",
      "Bash(then cp package-lock.json .backup/package-lock.json.backup)",
      "Bash(else echo \"No package-lock.json found\")",
      "Bash(pnpm:*)",
      "Bash(then echo \"node_modules directory exists\")",
      "Bash(node:*)",
      "Bash(curl -LsSf https://astral.sh/uv/install.sh)",
      "Bash(sh)",
      "Bash(source $HOME/.local/bin/env)",
      "Bash(export PATH=\"$HOME/.local/bin:$PATH\")",
      "Bash(wc:*)",
      "Bash(ls:*)",
      "Bash(cd:*)",
      "Bash(git add src/app/(main)/read-book/page.tsx src/components/ui/AIMessageBubble.tsx)",
      "Read(//mnt/d/AboutUniversity/**)",
      "Bash(git add src/app/(main)/read-book/page.tsx src/components/ui/ConversationFlow.tsx \"docs/improvement_report/The QA Module of the Reading Book.md\")",
      "Bash(npx tsc:*)",
      "Bash(netstat:*)",
      "Bash(lsof:*)",
      "Bash(ss:*)",
      "Bash(PORT=3001 npm run dev)",
      "Bash(kill:*)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(xargs cat:*)",
      "Bash(awk:*)",
      "Bash(npm ls react react-dom)",
      "Bash(test:*)",
      "Bash(git stash:*)",
      "Bash(if [ -f .env.local ])",
      "Bash(then grep -q \"OPENAI_API_KEY\" .env.local)",
      "Bash(else echo \"❌ .env.local file does not exist\")",
      "Bash(cat:*)",
      "WebFetch(domain:docs.aimlapi.com)",
      "Bash(echo:*)",
      "Read(//mnt/c/**)",
      "Bash(python3 /tmp/fix-api-test.py)",
      "Bash(sqlite3:*)",
      "Bash(sudo apt-get update:*)",
      "Bash(sudo apt-get install:*)",
      "Bash(npm run doctor:sqlite:*)",
      "Bash(tee:*)",
      "Bash(tsx scripts/verify-sqlite-schema.ts:*)",
      "Bash(npx tsx:*)",
      "Bash(chmod:*)",
      "Bash(openssl rand:*)",
      "Bash(git diff:*)"
    ]
  },
  "outputStyle": "default"
}
